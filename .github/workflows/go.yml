# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3.7.0
      with:
        version: v1.55.2

    - name: Unit Test
      run: |
        go test ./... -coverpkg ./... -coverprofile cover.out
        go tool cover -func=cover.out | grep total: | grep -Eo '[0-9]+\.[0-9]+'

    - name: Build
      run: go build ./...

    - name: Build Wasm
      run: go build -o web/game.wasm
      env:
        GOOS: js
        GOARCH: wasm

    - name: Copy WASM runtime
      run: cp $(go env GOROOT)/misc/wasm/wasm_exec.js web/

    - name: Archive WASM build
      uses: actions/upload-artifact@v4
      with:
        name: wasm-build
        path: |
          web/

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - uses: actions/checkout@v3

      - name: Download math result for job 1
        uses: actions/download-artifact@v4
        with:
          name: wasm-build
          path: web/

      - uses: actions/configure-pages@v4

      - uses: actions/upload-pages-artifact@v3
        with:
          path: web/

      - id: deployment
        uses: actions/deploy-pages@v4